How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    It is way easier to find typos or syntactic errors that have caused
    the fail of a previously working functionality.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    It allow you to restore functionalities or blocks of code that you had lost
    or deleted

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Maybe you skip some important previous state that you would like to have.
    But, on the other hand you only have states with relevant changes

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Because they have different uses, in programming it's pretty easy to have
    related files, but in photography or simple text it very strange.

How can you use the commands git log and git diff to view the history of files?

    With git log I can see the commits and the comments I made, and with git diff
    I can see the difference between two commits

How might using version control make you more confident to make changes that
could break something?

    Version control makes easy to restore previews versions of the software.

Now that you have your workspace set up, what do you want to try using Git for?
